function genTeamList(results){document.querySelector("table.team-list");var output=[];for(const result of results){var data=[];data.push(`<div class="center td_team_rank">${result.rank}</div>`),data.push(`<span class="td_teamName">${result.fullname}</span></br><span class="td_inst_name">${result.institution.toUpperCase()}</span>`),data.push(`<div class="center">${result.problem_total_points}<br>(${result.total_fine})</div>`);for(const problem of result.problem_list)problem.is_solved?data.push(`<div class="center problem-status"><i class="material-icons green-text">lens</i><br><span class="problem-status-0">${problem.total_tries}(${problem.fine})</span></div>`):data.push(`<div class="center problem-status" ><i class="material-icons red-text">lens</i><br><span class="problem-status-0">${problem.total_tries}</span></div>`);output.push(data)}return output}function filterTable(settings,searchData,index,rowData,counter){var teamNameInput=document.getElementById("team_name").value,institutionName=document.getElementById("institution_name").value,isStrict=document.getElementById("strict_ins_name").checked,minSolve=document.getElementById("min_solv").value,maxSolve=document.getElementById("max_solv").value,totalSolved=$(rowData[2])[0].textContent[0],tm_nm=(rowData=$(rowData[1]))[0].innerText,rowData=rowData[2].innerText;if(-1<tm_nm.indexOf(teamNameInput)&&(isStrict?rowData==institutionName:-1<rowData.indexOf(institutionName))&&minSolve<=totalSolved&&totalSolved<=maxSolve)return!0}async function getStandings(){for(var api=$("#standings_api").val(),baseUrl=new URL(api),results=[];;){var json=await(await fetch(baseUrl,{method:"GET"})).json();if(results.push(json.results),baseUrl.searchParams.set("page",json.next),null==json.next)break;await new Promise(r=>setTimeout(r,850))}var resultsMerged=[];let rank=0;for(const result of results){for(var[index,element]of result.entries())rank+=1,element.rank=rank,resultsMerged.push(element);rank+=1}return resultsMerged}async function getContestMeta(){var api=$("#contest_api").val();return(await fetch(api,{method:"GET"})).json()}function getDuration(starts,ends){starts=parseInt(new Date(starts)-new Date(ends))/1e3,ends=parseInt(starts/3600),starts=parseInt((starts-3600*ends)/60);return ends.toString().padStart(2,0)+":"+starts.toString().padStart(2,0)}function getContestStatus(ends){return 0<parseInt(new Date(ends)-Date.now())?"Running":"Ended"}function formatDtString(text){text=new Date(text);return`${text.getUTCDate()}-${text.getUTCMonth()+1}-${text.getUTCFullYear()} ${text.getHours().toString().padStart(2,"0")}:${text.getMinutes().toString().padStart(2,"0")}:`+text.getSeconds().toString().padStart(2,"0")}function setContestMeta(json){let elem=document.getElementById("contest-title");elem.textContent=json.title,(elem=document.getElementById("contest-start-time")).textContent=formatDtString(json.starts_at),(elem=document.getElementById("contest-end-time")).textContent=formatDtString(json.ends_at),(elem=document.getElementById("contest-duration")).textContent=getDuration(json.ends_at,json.starts_at)+" | "+getContestStatus(json.ends_at)}function setProblemSetMeta(problemSet){var thead=document.querySelector("table.team-list").querySelector("thead tr");let i=0;for(const problem of problemSet){var html=`<span class='th-problem'>${problem.problem_order_character}</td>`,row=thead.appendChild(document.createElement("th"));row.classList.add("center"),row.classList.add("problem-th"),row.innerHTML=html,i+=1}$("#max_solv").attr("max",problemSet.length),$("#max_solv").attr("value",problemSet.length),M.updateTextFields()}function populate_team_name(results){var team_names={};for(const result of results)team_names[result.fullname]=null;return team_names}function populate_institution_name(results){var institutionNames={};for(const result of results)institutionNames[result.institution.toUpperCase()]=null;return institutionNames}async function init(){M.Collapsible.init($(".collapsible")),M.Modal.init($(".modal")),M.Autocomplete.init($(".autocomplete"),{onAutocomplete:null,limit:10});let data=localStorage.getItem("secret_data");var resp;return(!(data=data&&JSON.parse(data))||18e5<new Date-new Date(data.lastUpdate))&&(resp=await fetch("https://icpc-preliminary-dhaka-2023.kurtnettle.workers.dev/",{method:"GET"}),data=await resp.json(),localStorage.setItem("secret_data",JSON.stringify(data))),setContestMeta(data.contestMeta),setProblemSetMeta(data.contestMeta.problem_set),document.getElementById("last-update-span").textContent=formatDtString(data.lastUpdate),M.Autocomplete.getInstance($("#team_name")).updateData(populate_team_name(data.teamStats)),M.Autocomplete.getInstance($("#institution_name")).updateData(populate_institution_name(data.teamStats)),data.teamStats}
